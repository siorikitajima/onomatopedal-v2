<html lang="en">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js"></script>
    <script src="/js/browser-atob.js"></script>

    <%- include('./partials/head.ejs')  %> 
<body>
    <%- include('./partials/nav.ejs')  %> 
    <a href="/guide#others">
        <div class="help">
            <p class="guideIcon">Guide</p>
        </div>
    </a>
    <div class="content home sideBar">
        <div class="opInfo">
            <a href="/preview">
                <button class="playPreview"></button>
            </a>

            <p class="label">EQD PEDAL</p>
            <a href="/info">
            <h2 id="pedalDisplay" class="editIcon"></h2>
            </a>
            <p class="label">ARTIST</p>
            <a href="/info">
            <h2 class="editIcon"><%= pedal.artist %></h2>
            </a>
            <p class="label">TRACK</p>
            <a href="/info">
            <h2 class="editIcon"><%= pedal.trackName %></h2>
            </a>
            <p class="label">ONOMATOPOEIA</p>
            <a href="/info">
            <h2 class="editIcon"><%= pedal.onomato %></h2>
            </a>
            <p><%= pedal.onoMeaning %></p>
            <p class="label">ANIMATION</p>
            <a href="/preview">
            <h2 id="animaName" class="editIcon"></h2>
            </a>

        </div>
        <div class="opCoverContainer">
            <div id="opCover">
                <div class="imgWarning">
                    <h3>! Update Cover Image !</h3>
                    <p id="warningText">This image does not match the current onomatopedal.</p>
                </div>
                <% if (cover === true) {%>
                    <% const val = Math.floor(1000 + Math.random() * 9000); %>
                        <img id="coverJpg" src="https://opv2-versioning.s3.us-west-2.amazonaws.com/<%=name%>/cover.jpg?<%=val%>" alt="cover" width="100%">
                <% } %>
            </div>

            <div class="flex">
                <button class="sm-btn update-btn" onclick="refreshCover(); hideCover();">
                    <p>Update</p>
                </button>
                <% if (cover == true) { %>
                <button class="sm-btn img-btn disabled" id="saveBtn" disabled onclick="saveCover()">
                <% } else { %>
                <button class="sm-btn img-btn" id="saveBtn" onclick="saveCover()">
                <% } %>
                    <p>Save</p>
                </button>
            </div>
        </div>
    </div>

    <script>
        var thepedal = <%- JSON.stringify(pedal) %> ;
        var eqdPedals = <%- JSON.stringify(eqdPedals) %> ;
        var animations = <%- JSON.stringify(animation) %> ;
        var cover = <%- JSON.stringify(cover) %> ;
        var name = <%- JSON.stringify(name) %> ;

        // const queryString = window.location.search; 
        // const urlParams = new URLSearchParams(queryString); 
        // const ver = urlParams.get('ver');
        // if(ver) {
        //     $('#coverJpg').attr('src', `https://opv2-versioning.s3.us-west-2.amazonaws.com/${name}/cover.jpg?${ver}`)
        // } else {
        //     $('#coverJpg').attr('src', `https://opv2-versioning.s3.us-west-2.amazonaws.com/${name}/cover.jpg`)
        // }

        var imgPath, theCol, theCol2, theFont, theR, theG, theB, theR2, theG2, theB2, colArray;
        for (var p = 0; p < eqdPedals.length; p++) {
            if (thepedal.pedalFull == eqdPedals[p].slug) {
                imgPath = 'images/pedals/' + eqdPedals[p].slug + '.png';
                $('#pedalDisplay').html(eqdPedals[p].fullName);
                $('#pedalImg').attr('src', imgPath);
                break;
            }
        }
        for (var a = 0; a < animations.length; a++ ) {
            if ( thepedal.animation == animations[a].slug ) {
                theFont = animations[a].font;
                $('#animaName').html(animations[a].fullName + ' + ' + thepedal.color);
                theFont = animations[a].font;
                var col = thepedal.color;
                colArray = animations[a][col];
                break;
            }};

        function hideCover() {
            if(cover) $('#coverJpg').hide();
            $('#saveBtn').removeClass('disabled');
            $('#saveBtn').removeAttr('disabled');
        }
        function refreshCover() {
                theR = Math.floor(Math.random() * (colArray[0] - colArray[3] + 1)) + colArray[3];
                theG = Math.floor(Math.random() * (colArray[1] - colArray[4] + 1)) + colArray[4];
                theB = Math.floor(Math.random() * (colArray[2] - colArray[5] + 1)) + colArray[5];
                theCol = 'rgb(' + theR + ',' + theG + ',' + theB + ')';
                theR2 = Math.floor(Math.random() * (colArray[0] - colArray[3] + 1)) + colArray[3];
                theG2 = Math.floor(Math.random() * (colArray[1] - colArray[4] + 1)) + colArray[4];
                theB2 = Math.floor(Math.random() * (colArray[2] - colArray[5] + 1)) + colArray[5];
                theCol2 = 'rgb(' + theR2 + ',' + theG2 + ',' + theB2 + ')';
                if($('.imgWarning').css('display') == 'block') {$('.imgWarning').css('display', 'none');}
        }
        refreshCover();

        var onoStr = thepedal.onomato;
        var words = onoStr.split(' ').length;
        var onoStrFin = onoStr.replace(/ /g, "\r\n");

        var remSpace = onoStr.replace(' ', '');
        let textCheck = /^[a-zA-Z]+$/.test(remSpace);

        // var onoStrFinCharCodes = [];
        //     for(var o = 0; o < remSpace.length; o++ ) {
        //         var charCode = remSpace.charCodeAt(o);
        //         onoStrFinCharCodes[o] = charCode;
        //     }
        // console.log(onoStrFinCharCodes)

        var tSize;
        if (words === 1) { tSize = 440 }
        else if (words === 2) { tSize = 240 }
        else if (words === 3) { tSize = 164 }
        else { tSize = 164 }
        // else if (words === 4) { tSize = 110 }
        // else { tSize = 100 }

        var myFont, myImg, onoChar = [];
        function preload() {
            var fontPath = 'css/fonts/' + theFont + '.otf';
            myFont = loadFont(fontPath);   
            myImg = loadImage(imgPath); 
            // for( var c = 0; c < onoStrFinCharCodes.length; c++) {
            // var letter = String.fromCharCode(onoStrFinCharCodes[c]);
            // onoChar[c] = letter;
            // }
            // onoChar = join(onoChar);
            // console.log(onoChar)
        }

        var coverImg, opImg;
        function setup() {
            if(textCheck) {textFont(myFont);}
            else {textStyle(BOLD);}
            // textFont(myFont);
            opImg = createCanvas(380, 380);
            opImg.parent('opCover');
            opImg.id('opImg');
        }

        function draw() {
            noStroke();
            rectMode(CENTER);
            translate(width/2, height/2)
            fill(theCol);
            rect(0, 0, width+10, height+10);
            // blendMode(DIFFERENCE);
            textSize(tSize);
            textLeading(tSize * 0.9);
            textAlign(CENTER, CENTER);
            fill(20);
            text(onoStrFin, 0, -(height * 0.05) );

            push();
            blendMode(DIFFERENCE);
            angleMode(DEGREES);
            rotate(45);
            fill(theCol2);
            rect(0, 0, width * 0.7, height * 0.7);
            pop();

            image(myImg, -(width/2) + 40, -(height/2) + 65, 300, 250);
        }

        // var fileName;
        let blobData, file, downloadLink;
        function saveCover() {
            var canvas = $('#opImg');
            var dataUrl = canvas[0].toDataURL('image/jpeg', 1.0);

            blobData = dataURItoBlob(dataUrl);
            uploadCover(blobData);
        };

        function uploadCover(file) {
            var formdata = new FormData();
            formdata.append("cover", file);
            $.ajax({
                type: "POST",
                url: "/studio",
                data: formdata,
                processData: false,
                contentType: false,
            }).done(function(respond){
                window.location.href = '/saved';
            });
        }

    function dataURItoBlob(dataURI) {
        var binary = atob(dataURI.split(',')[1]);
        var array = [];
        for(var i = 0; i < binary.length; i++) {
            array.push(binary.charCodeAt(i));
        }
        return new Blob([new Uint8Array(array)], {type: 'image/jpeg'});
    }

    $(document).ready(() => {
        if (cover === true) {
        let imgPedal = thepedal.cover.coverPedal;
        let imgAnima = thepedal.cover.coverAnima;
        let imgCol = thepedal.cover.coverCol;
        let imgOno = thepedal.cover.coverOno;
        let crtPedal = thepedal.pedalFull;
        let crtAnima = thepedal.animation;
        let crtCol = thepedal.color;
        let crtOno = thepedal.onomato;

        let conflicts = [];
        let confText;
        if(imgPedal != crtPedal) { conflicts.push('EQD Pedal'); }
        if(imgAnima != crtAnima) { conflicts.push('animation'); }
        if(imgCol != crtCol) { conflicts.push('color scheme'); }
        if(imgOno != crtOno) { conflicts.push('Onomatopoeia'); }
        let leng = conflicts.length;
        if(leng == 0) {null}
        else {
            if(leng == 1) { confText = conflicts[0]; }
            else if(leng == 2) { confText = conflicts[0] + ' and ' + conflicts[1]}
            else if(leng == 3) { confText = conflicts[0] + ', ' + conflicts[1] + ' and ' + conflicts[2]}
            else if(leng == 4) { confText = conflicts[0] + ', ' + conflicts[1] + ', ' + conflicts[2] + ' and ' + conflicts[3]}
            $('#warningText').html('This image does not match your current ' + confText + '.');
            $('.imgWarning').css('display', 'block');
        }
        }
    });

    </script>
</body>
</html>