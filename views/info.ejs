<html lang="en">
    <%- include('./partials/head.ejs')  %> 
<body>
    <%- include('./partials/nav.ejs')  %> 

    <div class="content forms">
        <h2>Upload Stems</h2>
        <% for (var st = 1; st < 4; st++) {%>
            <form class="stemCont flex" id="form<%= st %>" action="stem<%= st %>" method="POST" enctype="multipart/form-data">
                <label for="stem<%= st %>">Stem #<%= st %> </label>
                <% if ( stemFiles[st-1] == true ) { %>
                    <div class="flex audioBtns" id="buttons<%= st %>">
                        <div class="halfBtns" id="play-stem<%= st %>">Play</div>
                        <div class="halfBtns" onclick="reuploadTrack(<%= st %>)">Delete</div>
                    </div>
                    <input class= "stemInput hidden" type="file" name="stem<%= st %>" id="stem<%= st %>" style="padding: 10px;" onchange="submitTrack(<%= st %>)">
                <% } else { %>
                    <div class="flex audioBtns hidden" id="buttons<%= st %>">
                        <div class="halfBtns" id="play-stem<%= st %>">Play</div>
                        <div class="halfBtns" onclick="reuploadTrack(<%= st %>)">Delete</div>
                    </div>
                    <input class= "stemInput" type="file" name="stem<%= st %>" id="stem<%= st %>" style="padding: 10px;" onchange="submitTrack(<%= st %>)">
                <% } %>
            </form>
        <% }%>
            
            <div id="playAllBtn" class="paused" onclick="controlHandler()"></div>
            <div id="BtnContainer" class="paused">
                <div id="playBtn" onclick="controlHandler()"></div>
                <% for (var stbtn = 0; stbtn<stemFiles.length; stbtn++) {%>
                    <% if(stemFiles[stbtn] == true) {%>
                        <div class="stem muted" id="stem<%= stems[stbtn] %>Btn"><%= stems[stbtn] %></div>
                    <% } else {%>
                        <div class="stem muted disabled" id="stem<%= stems[stbtn] %>Btn"><%= stems[stbtn] %></div>
                    <% } %>
                <% } %>
                <!-- <div class="stem muted" id="stem1Btn">1</div>
                <div class="stem muted" id="stem2Btn">2</div>
                <div class="stem muted" id="stem3Btn">3</div> -->
            </div>

        <h2>Track and Artist Info</h2>

        <form action="/info" method="POST">
            <label for="trackName">Track Name</label>
            <input type="text" id="trackName" name="trackName" value="<%= pedal.trackName %>">
            <label for="artist">Artist Name(s)</label>
            <input type="text" id="artist" name="artist" value="<%= pedal.artist%>">
            <label for="website">Website(s)</label>
            <input type="text" id="website" name="website" value="<%= pedal.website%>">
            <label for="onomato">Onomatopoeia</label>
            <input type="text" id="onomato" name="onomato" value="<%= pedal.onomato%>">
            <label for="onoMeaning">Onomatopoeia Meaning</label>
            <input type="text" id="onoMeaning" name="onoMeaning" value="<%= pedal.onoMeaning%>">
            <button type="submit">Save</button>
            <input id="hiddenKeyName" type="hidden" name="name" value="<%= pedal.name%>">
            <input id="hiddenKeyName" type="hidden" name="pedalFull" value="<%= pedal.pedalFull%>">
        </form>
    </div>
    <%- include('./partials/footer.ejs')  %> 
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tone/14.7.77/Tone.js"></script>
    <script>
        var pedal = <%- JSON.stringify(pedal) %> ;
        var name = <%- JSON.stringify(name) %> ;
        var stemFiles = <%- JSON.stringify(stemFiles) %> ;

        function reuploadTrack(n) {
            var buttons = '#buttons' + n;
            var input = '#stem' + n;
            $(buttons).addClass('hidden');
            $(input).removeClass('hidden');
        }
        function submitTrack(n) {
            var theform = '#form' + n;
            $(theform).submit();
        }

        const controlMain = $('#playAllBtn, #BtnContainer');
        const stems = $('.stem');
        let toneStarted = false;

        function makeChannel( url, pan = 0 ) {
            const channel = new Tone.Channel({ pan }).toDestination();
            const player = new Tone.Player({
                url: 'sound/' + name + `/${url}.mp3`,
                loop: true
            }).sync().start(0);
            player.connect(channel);

            const btn = url + 'Btn';
            const thisMuteButton = document.getElementById(btn);
            $(thisMuteButton).on('click', (event) => {
                event.preventDefault();
                const checkMuted = $(event.target).hasClass("muted") ? true : false;
                if (checkMuted) {
                    console.log('it is muted');
                    channel.mute = false;
                } else {
                    console.log('it is not muted');
                    channel.mute = true;
                }
            });

            $('#playBtn').on('click', () => {
                const checkPaused = thisMuteButton.classList.contains("paused") ? true : false;
                if(!checkPaused){
                channel.mute = false;
                }
            });

            var eachPlaybtn = '#play-' + url;
            var allPlaybtn = ['#play-stem1', '#play-stem2', '#play-stem3'];
            $(eachPlaybtn).on('click', () => {
                if(!toneStarted) {
                        Tone.start();
                        toneStarted = true;
                    }
                if ($(eachPlaybtn).hasClass('stemOnPlay')) {
                    Tone.Transport.stop();
                    $(eachPlaybtn).html('Play').removeClass('stemOnPlay');
                    channel.solo = false;
                } else if (!$(eachPlaybtn).hasClass('stemOnPlay')) {
                    for(var c = 0; c < allPlaybtn.length; c++) {
                        if($(allPlaybtn[c]).hasClass('stemOnPlay')) {
                            $(allPlaybtn[c]).trigger('click');
                        }
                    }
                    channel.solo = true;
                    Tone.Transport.start();
                    $(eachPlaybtn).html('Stop').addClass('stemOnPlay');
                }
            });
        };

        for (var sf = 0; sf < stemFiles.length; sf++) {
            var channelName = ['stem1', 'stem2', 'stem3']
            if (stemFiles[sf] == true) {
                makeChannel(channelName[sf]);
            }
        }

            // Play/Pause Button
            function controlHandler() {
                if(!toneStarted) {
                        Tone.start();
                        toneStarted = true;
                    }
                if($(controlMain).hasClass("paused")) {
                    $(controlMain).removeClass("paused");
                    $(controlMain).addClass("playing");
                    Tone.Transport.start();
                    $(stems).removeClass("muted");
                    $(stems).addClass("unmuted");
                } else {
                    $(controlMain).removeClass("playing");
                    $(controlMain).addClass("paused");
                    $(stems).removeClass("unmuted");
                    $(stems).addClass("muted");
                    Tone.Transport.stop();
                }
            };

            // Stem buttons
            $(stems).on('click', event => {
                // event.preventDefault;
                if($(event.target).hasClass("unmuted")) {
                    $(event.target).removeClass("unmuted");
                    $(event.target).addClass("muted");
                } else {
                    $(event.target).removeClass("muted");
                    $(event.target).addClass("unmuted");
                }
            });
        
    </script>
</body>
</html>