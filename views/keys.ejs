<html lang="en">
    <%- include('./partials/head.ejs')  %> 
<body>
    <%- include('./partials/nav.ejs')  %> 
    <a href="/guide#keys">
        <div class="help">
            <p class="guideIcon">Guide</p>
        </div>
    </a>
    <div class="content keys sideBar paddingBottom">
        <div class="h2bg">
            <h2>Keys to Samples</h2>
        </div>
        <div class="keyboard">
        <% if (pedal.keys.length > 0) { %>
            <% pedal.keys.forEach((thekey, index) => { %>
            <div class="key <%- thekey.enabled ? 'active' : null %> col-<%= thekey.sample %>" id="<%= thekey.key %>" data-pitch=<%= thekey.pitch %> data-enabled=<%= thekey.enabled %> data-index='<%= index %>' data-sample='<%= thekey.sample %>' >
                <% if(thekey.key == 'ONE') { %> <h3>1</h3> 
                <%} else if(thekey.key == 'TWO') { %> <h3>2</h3> 
                <%} else if(thekey.key == 'THREE') { %> <h3>3</h3> 
                <%} else if(thekey.key == 'FOUR') { %> <h3>4</h3> 
                <%} else if(thekey.key == 'FIVE') { %> <h3>5</h3> 
                <%} else if(thekey.key == 'SIX') { %> <h3>6</h3> 
                <%} else if(thekey.key == 'SEVEN') { %> <h3>7</h3> 
                <%} else if(thekey.key == 'EIGHT') { %> <h3>8</h3> 
                <%} else if(thekey.key == 'NINE') { %> <h3>9</h3> 
                <%} else if(thekey.key == 'ZERO') { %> <h3>0</h3> 
                <%} else {%>
                    <h3><%= thekey.key %></h3>
                <%}%>
                    <p><%= thekey.pitch.toUpperCase().replace('M', '#') %></p>
            </div>
            <% }) %>
        <% } else { %>
            <p>No key to display</p>
        <% } %>
            <div class="rowSelector zero gBtn" data-index="0">
                <img src="images/row.svg" alt="row editor">
            </div>
            <div class="rowSelector one gBtn" data-index="1">
                <img src="images/row.svg" alt="row editor">
            </div>
            <div class="rowSelector two gBtn" data-index="2">
                <img src="images/row.svg" alt="row editor">
            </div>
            <div class="rowSelector three gBtn" data-index="3">
                <img src="images/row.svg" alt="row editor">
            </div>
        </div>
        
        <div class="hidden" id="transparentScreen" onclick="keyPanel();">
        </div>
        <div class="forms keyPanels hidden" id="keyPanel">
            <h3 class="panelTitle">Key: <span id="keyName"></span></h3>

            <div class="closebtn" onclick="keyPanel()"></div>

            <form id="keyForm" action="/keys" method="POST" enctype="multipart/form-data">
                <div class="left flex">
                    <div class="formItem">
                    <label for="enabled" class="checkItem">Enabled
                    <input type="checkbox" id="enabled" name="enabled" type="button" onclick="showFileBtn()" />
                    <span class="checkmark"></span>
                    </label>

                    </div>
                    <div class="formItem">
                    <label for="pitch">Key Pitch</label>
                    <select id="pitch" name="pitch">
                        <% for (var p = 0; p < pitches.length; p++) { %>
                            <option value="<%= pitches[p].slug %>"><%= pitches[p].fullName %></option>
                        <% } %>

                    </select>
                    </div>
                    <input id="hiddenKeyName" type="hidden" name="key">
                </div>
                <div class="right flex" id="sampleDiv">
                    <div class="formItem">
                        <label for="sample">Sample</label>
                        <select name="sample" id="sample">
                            <% for (let s = 0; s < pedal.samples.length; s++) {%>
                                <option value="<%= pedal.samples[s].samplename %>"><%= pedal.samples[s].samplename %></option>
                            <% } %>
                        </select>
                    </div>
                    <div class="formItem" id="soundBtn">
                        <label for="soundfile">Add New</label>
                        <div class="filebtn">
                            <input type="file" width="60" name="soundfile" id="soundfile" style="padding: 15px; opacity: 0;">
                        </div>
                    </div>
                    <div class="formItem" id="hidden-sp" style="display: none;">
                        <label for="samplePitch">Sample Pitch</label>
                        <select id="samplePitch" name="samplePitch">
                            <% for (var p = 0; p < pitches.length; p++) { %>
                                <option value="<%= pitches[p].slug %>"><%= pitches[p].fullName %></option>
                            <% } %>
    
                        </select>
                        </div>
                </div>
                <button id="keySaveBtn" class="disabled" disabled>Save</button>
            </form>
        </div>

        <div class="hidden" id="transparentScreeng" onclick="keyGPanel()">
        </div>
        <div class="forms keyPanels hidden" id="keyGPanel">
            <h2 id="groupName"></h2>
            <div class="closebtn" onclick="keyGPanel()"></div>
            <form id="keyGForm" action="/keys-group" method="POST">
                <div class="left flex">
                    <div class="formItem">
                    <label for="enabledg" class=" checkItem">Enabled
                    <input type="checkbox" id="enabledg" name="enabledg" type="button" />
                    <span class="checkmark"></span>
                    </label>

                    </div>
                    <input id="hiddenKeyGName" type="hidden" name="keyg">
                    <div class="formItem">
                        <label for="sampleg">Sample</label>
                        <select name="sampleg" id="sampleg">
                            <% for (let s = 0; s < pedal.samples.length; s++) {%>
                                <option value="<%= pedal.samples[s].samplename %>"><%= pedal.samples[s].samplename %></option>
                            <% } %>
                        </select>
                    </div>
                </div>
                <button id="keyGSaveBtn" class="disabled" disabled>Save</button>
            </form>
        </div>
        
    </div>
    <%- include('./partials/player.ejs')  %> 
    
    <script src="js/ejs.js"></script>
    <script>
        var thekeys = <%- JSON.stringify(pedal.keys) %> ;
        // var thepads = <%- JSON.stringify(pedal.pads) %> ;
        var thesamples = <%- JSON.stringify(pedal.samples) %> ;
        var username = <%- JSON.stringify(name) %> ;
        var disableKeys = false;

        // Open and close key panel
        function keyPanel() {
            let keyPanelWrap = document.querySelector('#keyPanel');
            let allPanels = document.querySelector('#transparentScreen');
                    if(!allPanels.classList.contains('hidden')) {
                        keyPanelWrap.classList.add('hidden');
                        allPanels.classList.add('hidden');
                    } else {
                        keyPanelWrap.classList.remove('hidden');
                        allPanels.classList.remove('hidden');
                    }
                }

        function keyGPanel() {
            let keyGPanelWrap = document.querySelector('#keyGPanel');
            let allPanelsG = document.querySelector('#transparentScreeng');
                if(!allPanelsG.classList.contains('hidden')) {
                    keyGPanelWrap.classList.add('hidden');
                    allPanelsG.classList.add('hidden');
                } else {
                    keyGPanelWrap.classList.remove('hidden');
                    allPanelsG.classList.remove('hidden');
                }
        };

        // Rendering key panel content
        var thekey;
        $(document).on('click', '.key', function() {
            document.querySelector('#keyForm').reset();
            if(!$('#keySaveBtn').hasClass('disabled')) {$('#keySaveBtn').addClass('disabled');}
            if(!$('#keySaveBtn').attr('disabled')){$('#keySaveBtn').attr('disabled')};

            var index = $(this).attr('data-index');
            thekey = thekeys[index];

            var keyName;
            if(thekey.key == 'ONE') { keyName = 1;}
            else if(thekey.key == 'TWO') { keyName = 2;}
            else if(thekey.key == 'THREE') { keyName = 3;}
            else if(thekey.key == 'FOUR') { keyName = 4;}
            else if(thekey.key == 'FIVE') { keyName = 5;}
            else if(thekey.key == 'SIX') { keyName = 6;}
            else if(thekey.key == 'SEVEN') { keyName = 7;}
            else if(thekey.key == 'EIGHT') { keyName = 8;}
            else if(thekey.key == 'NINE') { keyName = 9;}
            else if(thekey.key == 'ZERO') { keyName = 0;}
            else { keyName = thekey.key; }
            $('#keyName').html(keyName);

            $('#noteName').html(thekey.pitch.toUpperCase().replace('M', '#'));
            if (thekey.enabled == true) { 
                $('input#enabled').prop('checked', true); 
                $('#sampleDiv').removeClass('hidden2');
            } else { 
                $('input#enabled').prop('checked', false); 
                $('#sampleDiv').addClass('hidden2');
            }

            var pitch = document.querySelector('#pitch');
            var sampleName = document.querySelector('#sample');
            var opt, opt2;
            for ( var i = 0, len = pitch.options.length; i < len; i++ ) {
            opt = pitch.options[i];
            opt.selected = false;
            if ( opt.value === thekey.pitch ) {
                opt.selected = true;
                opt.setAttribute('selected', 'selected'); 
                break;
            }}
            for ( var i = 0, len = sampleName.options.length; i < len; i++ ) {
            opt2 = sampleName.options[i];
            opt2.selected = false;
            if ( opt2.value === thekey.sample ) {
                opt2.selected = true;
                opt2.setAttribute('selected', 'selected'); 
            }}

            $('#hiddenKeyName').attr('value', thekey.key);

            keyPanel();
        });

        /// Key panel button
        $('#soundfile').change(() => {
            var newName = $('#soundfile')[0].files[0].name;
            var onlyName = newName.slice(0, -4);
            $("#sample").append(`<option value="${onlyName}" selected>${onlyName}</option>`);
            $('#hidden-sp').css('display', 'block');
            $('#soundBtn').css('display', 'none');
        })

        $('#enabled, #pitch, #sample, #soundfile').on('change', () => {
            $('#keySaveBtn').removeClass('disabled');
            $('#keySaveBtn').removeAttr('disabled');
        })

        // Update file button is visible when 'New Sound' is on
        function showFileBtn() {
        let sampleDiv = $('#sampleDiv');
        if ( sampleDiv.hasClass('hidden2') ) {
            sampleDiv.removeClass('hidden2');
            sampleDiv.addClass('show2');
        } else {
            sampleDiv.removeClass('show2');
            sampleDiv.addClass('hidden2');
        }
    }
///// Group edit - Hover
let row1Btn = $('.rowSelector.zero');
let row2Btn = $('.rowSelector.one');
let row3Btn = $('.rowSelector.two');
let row4Btn = $('.rowSelector.three');
let row1 = $('#ONE, #TWO, #THREE, #FOUR, #FIVE, #SIX, #SEVEN, #EIGHT, #NINE, #ZERO');
let row2 = $('#Q, #W, #E, #R, #T, #Y, #U, #I, #O, #P');
let row3 = $('#A, #S, #D, #F, #G, #H, #J, #K, #L');
let row4 = $('#Z, #X, #C, #V, #B, #N, #M');
let allBtns = [row1Btn, row2Btn, row3Btn, row4Btn];
let allGroups = [row1, row2, row3, row4];
let allIndexes = [ 
    ['ONE', 'TWO', 'THREE', 'FOUR', 'FIVE', 'SIX', 'SEVEN', 'EIGHT', 'NINE', 'ZERO'],
    ['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P'],
    ['A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L'],
    ['Z', 'X', 'C', 'V', 'B', 'N', 'M']];
let allGNames = [ "First Row (10 keys)", "Second Row (10 keys)", "Third Row (9 keys)", "Forth Row (7 keys)"];

for(let g = 0; g < allBtns.length; g++) {
    $(allBtns[g]).mouseover(()=> {
        $(allGroups[g]).css({'border': '#fff solid 1px', 'border-radius': '5px'});
    })
    $(allBtns[g]).mouseout(()=> {
        $(allGroups[g]).css({'border': '#111 solid 1px', 'border-radius': '5px'});
    }) 
}

// Rendering key G panel content

$(document).on('click', '.gBtn', function() {
    console.log('clicked');
    document.querySelector('#keyGForm').reset();
    if(!$('#keyGSaveBtn').hasClass('disabled')) {$('#keyGSaveBtn').addClass('disabled');}
    if(!$('#keyGSaveBtn').attr('disabled')){$('#keyGSaveBtn').attr('disabled')};

    let index = $(this).attr('data-index');
    $('#groupName').html(allGNames[index]);

    $('#hiddenKeyGName').attr('value', allIndexes[index]);
    keyGPanel();
});

$('#enabledg, #sampleg').on('change', () => {
        $('#keyGSaveBtn').removeClass('disabled');
        $('#keyGSaveBtn').removeAttr('disabled');
    })
    </script>
</body>
</html>