<div class="infoPanel">
        
            <div class="v2Nav">
                <div class="prev">
                    <a href="/v2/<%= prev %>">
                    <img src="../images/prevBtn.svg" alt="prev">
                    <img class="navthumb" src="https://opv2.s3.amazonaws.com/<%= prev %>/cover.jpg?<%=val%>" alt="pedal">
                    </a>
                </div>
                <div class="site-title front">
                    <a href="/"><h1>OnomatoPedal</h1></a>
                </div>                
                <div class="next">
                    <a href="/v2/<%= next %>">
                    <img class="navthumb" src="https://opv2.s3.amazonaws.com/<%= next %>/cover.jpg?<%=val%>" alt="pedal">
                    <img src="../images/nextBtn.svg" alt="next">
                    </a>
                </div>
            </div>

            <% if (mobile) {%>
            <div class="infoOne">
                <div class="opImg">
                    <% var val = Math.floor(1000 + Math.random() * 9000); %>
                    <img  src="https://opv2.s3.amazonaws.com/<%= name %>/cover.jpg?<%=val%>" alt="pedal">
                </div>
            </div>
        <% } else { %>
            <div class="flex">
        <% } %>   
        <div class="infoTwo">
            <p class="label">ONOMATOPOEIA</p>
            <h2><%= pedal.onomato %></h2>
            <p><%= pedal.onoMeaning %></p>
            <p class="label">FEATURED PEDAL</p>
            <a id="pedalLink" href="" target="_blank">
                <h2 id="pedalDisplay" class="linkIcon"></h2>
            </a>
            <p id="pedalDesc"></p>
            <p class="label">MUSIC BY</p>
            <h2 class="linkIcon"><%= pedal.artist %></h2>
            <h3 class="linkIcon">"<%= pedal.trackName %>"</h3>
            <p class="label">ANIMATION BY</p>
            <% for ( var a = 0; a < animation.length; a++ ) { %> 
                <% if ( animation[a].slug == pedal.animation ) { %>
            <h2 class="linkIcon"><%= animation[a].artist %></h2>
            <h3 class="linkIcon">"<%= animation[a].fullName %>"</h3>
                <% } %>
            <% } %>
        </div>
        <% if (!mobile) {%>
        <div class="infoOne">
            <div class="opImg">
                <% var val = Math.floor(1000 + Math.random() * 9000); %>
                <img  src="https://opv2.s3.amazonaws.com/<%= name %>/cover.jpg?<%=val%>" alt="pedal">
            </div>
        </div>
        <% } %>
        <div class="infoThree">
        <% if (!mobile) {%>
            <div class="keybord-container">
                <div class="keyboard">
                    <% if (pedal.keys.length > 0) { %>
                        <% pedal.keys.forEach((thekey, index) => { %>
                        <div class="key <%- thekey.enabled ? 'active' : null %> col-<%= thekey.sample %>" id="<%= thekey.key %>" data-pitch=<%= thekey.pitch %> data-enabled=<%= thekey.enabled %> data-index='<%= index %>' data-sample='<%= thekey.sample %>' >
                            <% if(thekey.key == 'ONE') { %> <h3>1</h3> 
                                <%} else if(thekey.key == 'TWO') { %> <h3>2</h3> 
                                <%} else if(thekey.key == 'THREE') { %> <h3>3</h3> 
                                <%} else if(thekey.key == 'FOUR') { %> <h3>4</h3> 
                                <%} else if(thekey.key == 'FIVE') { %> <h3>5</h3> 
                                <%} else if(thekey.key == 'SIX') { %> <h3>6</h3> 
                                <%} else if(thekey.key == 'SEVEN') { %> <h3>7</h3> 
                                <%} else if(thekey.key == 'EIGHT') { %> <h3>8</h3> 
                                <%} else if(thekey.key == 'NINE') { %> <h3>9</h3> 
                                <%} else if(thekey.key == 'ZERO') { %> <h3>0</h3> 
                                <%} else {%>
                                <h3><%= thekey.key %></h3>
                                <%}%>
                                <p><%= thekey.pitch.toUpperCase().replace('M', '#') %></p>
                        </div>
                        <% }) %>
                    <% } else { %>
                        <p>No key to display</p>
                    <% } %>
                </div>
            </div>
        </div>
        <% } %>
    </div>

    <div class="merchContainer">
        <div class="merch-icons">
            <% merch.forEach((item, index) => { %>
                <a href="<%=item.url%>" target="_blank">
                    <div class="icon">
                        <div class="label">
                            <p><%=item.label%></p>
                        </div>
                        <img src="../images/merch/<%=item.image%>" alt="<%=item.label%>">
                    </div>
                </a>
            <% }) %>
        </div>
    </div>
    <% if (mobile) {%>
</div>
    <% } %>
    <div class="playBtnPanel" onclick="controlHandler()">PLAY</div>
    <% if (!mobile) {%>
</div>
    <% } %>

<div id="controller">
    <div id="controlMain" class="paused" onclick="controlHandler()"></div>
    <div id="controlStems" class="paused">
      <% for (var stbtn = 0; stbtn<stemFiles.length; stbtn++) {%>
        <% if(stemFiles[stbtn] == true) {%>
            <div class="stem muted" id="stem<%= stems[stbtn] %>"><%= stems[stbtn] %></div>
        <% } else {%>
            <div class="stem muted disabled" id="stem<%= stems[stbtn] %>"><%= stems[stbtn] %></div>
        <% } %>
    <% } %>
    </div>
  </div>
    <div id="drumpads">
        <div class="pad" id="zero-0"></div>
        <div class="pad" id="one-0"></div>
        <div class="pad" id="two-0"></div>
        <div class="pad" id="three-0"></div>
    
        <div class="pad" id="zero-1"></div>
        <div class="pad" id="one-1"></div>
        <div class="pad" id="two-1"></div>
        <div class="pad" id="three-1"></div>
    
        <div class="pad" id="zero-2"></div>
        <div class="pad" id="one-2"></div>
        <div class="pad" id="two-2"></div>
        <div class="pad" id="three-2"></div>
    
        <div class="pad" id="zero-3"></div>
        <div class="pad" id="one-3"></div>
        <div class="pad" id="two-3"></div>
        <div class="pad" id="three-3"></div>
    
        <div class="pad" id="zero-4"></div>
        <div class="pad" id="one-4"></div>
        <div class="pad" id="two-4"></div>
        <div class="pad" id="three-4"></div>
    
        <div class="pad" id="zero-5"></div>
        <div class="pad" id="one-5"></div>
        <div class="pad" id="two-5"></div>
        <div class="pad" id="three-5"></div>
    
        <div class="pad" id="zero-6"></div>
        <div class="pad" id="one-6"></div>
        <div class="pad" id="two-6"></div>
        <div class="pad" id="three-6"></div>
    
        <div class="pad" id="zero-7"></div>
        <div class="pad" id="one-7"></div>
        <div class="pad" id="two-7"></div>
        <div class="pad" id="three-7"></div>
    
        <div class="pad" id="zero-8"></div>
        <div class="pad" id="one-8"></div>
        <div class="pad" id="two-8"></div>
        <div class="pad" id="three-8"></div>
    
        <div class="pad" id="zero-9"></div>
        <div class="pad" id="one-9"></div>
        <div class="pad" id="two-9"></div>
        <div class="pad" id="three-9"></div>
      </div>

  <div class="blackscreen"></div>
<div class="loadingSpinner"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>

<script>
    function isTouchDevice() {
        // return (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1);
        var result = false;
    if ((/(iPad)/.test(navigator.userAgent)
    && /WebKit/.test(navigator.userAgent)
    && !window.MSStream)
    || (navigator.platform === 'MacIntel'
    && navigator.maxTouchPoints
    && navigator.maxTouchPoints === 5)
      ) {
        //   console.log('iOS')
          result = true;
    } else if (window.PointerEvent && ('maxTouchPoints' in navigator)) {
        // if Pointer Events are supported, just check maxTouchPoints
        if (navigator.maxTouchPoints > 0) {
        result = true;
        } 
    } else {
        // no Pointer Events...
        if (window.matchMedia && window.matchMedia("(any-pointer:coarse)").matches) {
        // check for any-pointer:coarse which mostly means touchscreen
        result = true;
        } else if (window.TouchEvent || ('ontouchstart' in window)) {
        // last resort - check for exposed touch events API / event handler
        result = true;
        } 
    }
    return result;
    }
    var isTouch = isTouchDevice();
    $('.blackscreen, .loadingSpinner').show();
    window.onload = ()=> { $('.blackscreen, .loadingSpinner').hide(); };
// console.log('isMobile: ' + mobile + ', isTouch: ' + isTouch);
        var thepedal = <%- JSON.stringify(pedal) %> ;
        var eqdPedals = <%- JSON.stringify(eqdPedals) %> ;
        var theAnima = <%- JSON.stringify(animation) %> ;
        var mobile = <%- JSON.stringify(mobile) %> ;

        for (var p = 0; p < eqdPedals.length; p++) {
            if (thepedal.pedalFull == eqdPedals[p].slug) {
                $('#pedalDisplay').html(eqdPedals[p].fullName);
                $('#pedalLink').attr('href', eqdPedals[p].eqdurl);
                $('#pedalDesc').html(eqdPedals[p].description);
                break;
            }
        }

        var onoStr = thepedal.onomato;
        var words = onoStr.split(' ').length;
        if (words === 1) {$('#onoText').css('font-size', '24em');}
        else if (words === 2) {$('#onoText').css('font-size', '12em');}
        else {$('#onoText').css('font-size', '8em');}

        // var allMerchIcons = $('.icon');
        // allMerchIcons.each(function() {
        //     var merchName = $(this).children('img').attr('alt');
        //     $(this).append('<h3>' + merchName + '</h3>');
        // });
        var labels = $('div.infoPanel div.merch-icons div.icon div.label');
        var labelOn = false;
        function setLabel() {
            labelOn = !labelOn;
            if(labelOn) { 
                $(labels).css('bottom', 0);
            } else {
                $(labels).css('bottom', '-120%');
            }
        }
        setTimeout(() => { setLabel() }, 2000);

        ///// Audio Player
        var thekeys = <%- JSON.stringify(pedal.keys) %> ;
        var thepads = <%- JSON.stringify(pedal.pads) %> ;
        var thesamples = <%- JSON.stringify(pedal.samples) %> ;
        var username = <%- JSON.stringify(name) %> ;

        var stemFiles = <%- JSON.stringify(stemFiles) %> ;

        const controlMain = $('#controlMain, #controlStems');
        const stems = $('.stem');
        let toneStarted = false;

        function makeChannel( url, pan = 0 ) {
            const channel = new Tone.Channel({ pan }).toDestination();
            const player = new Tone.Player({
                url: 'https://opv2.s3.amazonaws.com/' + username + `/${url}.mp3`,
                loop: true
            }).sync().start(0);
            player.connect(channel);
            player.context.resume(); // necessary for Safari

            const btn = url;
            const thisMuteButton = document.getElementById(btn);
            $(thisMuteButton).on('click', (event) => {
                event.preventDefault();
                const checkMuted = $(event.target).hasClass("muted") ? true : false;
                if (checkMuted) {
                    channel.mute = false;
                } else {
                    channel.mute = true;
                }
            });

            $('#playBtn').on('click', () => {
                const checkPaused = thisMuteButton.classList.contains("paused") ? true : false;
                if(!checkPaused){
                channel.mute = false;
                }
            });

            var eachPlaybtn = '#play-' + url;
            var allPlaybtn = ['#play-stem1', '#play-stem2', '#play-stem3'];
            $(eachPlaybtn).on('click', () => {
                if(!toneStarted) {
                        Tone.start();
                        toneStarted = true;
                    }
                if ($(eachPlaybtn).hasClass('stemOnPlay')) {
                    Tone.Transport.stop();
                    $(eachPlaybtn).html('Play').removeClass('stemOnPlay');
                    channel.solo = false;
                } else if (!$(eachPlaybtn).hasClass('stemOnPlay')) {
                    for(var c = 0; c < allPlaybtn.length; c++) {
                        if($(allPlaybtn[c]).hasClass('stemOnPlay')) {
                            $(allPlaybtn[c]).trigger('click');
                        }
                    }
                    channel.solo = true;
                    Tone.Transport.start();
                    $(eachPlaybtn).html('Stop').addClass('stemOnPlay');
                }
            });
        };

        for (var sf = 0; sf < stemFiles.length; sf++) {
            var channelName = ['stem1', 'stem2', 'stem3']
            if (stemFiles[sf] == true) {
                makeChannel(channelName[sf]);
            }
        }
        if(mobile || isTouch) {
            $('div.infoThree').hide();
        }
    // Play/Pause Button
    function controlHandler() {
        if(!toneStarted) {
                Tone.start();
                toneStarted = true;
            }
        var allPlaybtn = ['#play-stem1', '#play-stem2', '#play-stem3'];
        for(var c = 0; c < allPlaybtn.length; c++) {
                if($(allPlaybtn[c]).hasClass('stemOnPlay')) {
                    $(allPlaybtn[c]).trigger('click');
                }
        }

        if($(controlMain).hasClass("paused")) {
            $(controlMain).removeClass("paused");
            $(controlMain).addClass("playing");
            if(mobile || isTouch) {
            $('#controller').css('bottom', '10px');
            $('.infoPanel').css('top', '-120%');
            $('.v2Nav').css('top', '-120%');
            $('#drumpads').css('visibility', 'visible');
            $('.playBtnPanel').css('bottom', '-120%');
            } else {
            $('#controller').css('bottom', '20px');
            $('.infoPanel').css('top', '-200%');
            }
            Tone.Transport.start();
            $(stems).removeClass("muted");
            $(stems).addClass("unmuted");
        } else {
            $(controlMain).removeClass("playing");
            $(controlMain).addClass("paused");
            if(mobile || isTouch) {
            $('#controller').css('bottom', '-120%');
            $('.infoPanel').css('top', '51px');
            $('.v2Nav').css('top', 0);
            $('#drumpads').css('visibility', 'hidden');
            $('.playBtnPanel').css('bottom', 0);
            } else {
            $('#controller').css('bottom', '-200%');
            $('.infoPanel').css('top', '51px');
            }
            $(stems).removeClass("unmuted");
            $(stems).addClass("muted");
            Tone.Transport.stop();
        }
    };

    // Stem buttons
    $(stems).on('click', event => {
        if($(event.target).hasClass("unmuted")) {
            $(event.target).removeClass("unmuted");
            $(event.target).addClass("muted");
        } else {
            $(event.target).removeClass("muted");
            $(event.target).addClass("unmuted");
        }
    });

    ////////// Keys/Pads to Play Sample

    $(document).ready(function() {
        var keyPlayed = false;

        var fileName = [], pitchString = [];
        for (var i = 0; i < thesamples.length; i++) {
                var name = thesamples[i].samplename;
                var note = thesamples[i].pitch.toUpperCase().replace('M', '#');
                fileName.push(name);
                pitchString.push(note);
        }

        if(mobile || isTouch) {
            var padToPitch = {};
        for (var i = 0; i < thepads.length; i++) {
            var thepad = thepads[i].pad;
            var note = thepads[i].pitch.toUpperCase().replace('M', '#'); 
           if(thepads[i].enabled) {
                padToPitch[thepad] = note;
            } else {
                padToPitch[thepad] = null;
            }
            }
        }
        var keyToPitch = {};
        for (var i = 0; i < thekeys.length; i++) {
            var thekey = thekeys[i].key.toLowerCase();
            var note = thekeys[i].pitch.toUpperCase().replace('M', '#'); 
           if(thekeys[i].enabled) {
            if(thekey == 'space') {
                keyToPitch[' '] = note;
                } else if(thekey == 'one') { keyToPitch['1'] = note; 
                } else if(thekey == 'two') { keyToPitch['2'] = note; 
                } else if(thekey == 'three') { keyToPitch['3'] = note; 
                } else if(thekey == 'four') { keyToPitch['4'] = note; 
                } else if(thekey == 'five') { keyToPitch['5'] = note; 
                } else if(thekey == 'six') { keyToPitch['6'] = note; 
                } else if(thekey == 'seven') { keyToPitch['7'] = note; 
                } else if(thekey == 'eight') { keyToPitch['8'] = note; 
                } else if(thekey == 'nine') { keyToPitch['9'] = note; 
                } else if(thekey == 'zero') { keyToPitch['0'] = note; 
               } else {
                keyToPitch[thekey] = note;
               }
            } else {
                keyToPitch[thekey] = null;
            }
        }

        var samplers = [];
        for( i = 0; i < fileName.length; i++ ) {
            samplers[i] = new Tone.Sampler({
            [pitchString[i]]: 'https://opv2.s3.amazonaws.com/' + username + '/' + fileName[i] + '.mp3'
            }, {
                'release' : 1,
                'onload' : function(){
                Tone.context.updateInterval = 0;
                Tone.context.lookAhead = 0;
                }
            }).toDestination();
        }

        if(mobile || isTouch) {
            function touchPad(id){
            //// Find index# of sample for the pad
            function theIndex(id) {
                var i, n, s;
                for (var ke = 0; ke < thepads.length; ke++) {
                    if (thepads[ke].pad == id) {
                        i = ke;
                        break;
                    }
                }
                n = thepads[i].sample;
                for (var sa = 0; sa < thesamples.length; sa++) {
                    if (thesamples[sa].samplename == n) {
                        s = sa;
                        break;
                    } else {
                        s = 0;
                    }
                }
                return s;
            }
            // Do nothing with other pads
            if (padToPitch[id] == null) {
            } else {
            var index = theIndex(id);
            samplers[index].triggerAttackRelease(padToPitch[id]);
            }
            }
            $('div.pad').on('touchstart', () => {
                if(!toneStarted) {
                    Tone.start();
                    toneStarted = true;
                }
                var id = event.target.id;
                touchPad(id);
            });
        }

        function onkeydown(e){
            var x = e.keyCode || e.which;
            e.preventDefault();

            //// Find index# of sample for the key
            function theIndex(k) {
                var i, n, s;
                for (var ke = 0; ke < thekeys.length; ke++) {
                    if (thekeys[ke].key == k) {
                        i = ke;
                        break;
                    }
                }
                n = thekeys[i].sample;
                for (var sa = 0; sa < thesamples.length; sa++) {
                    if (thesamples[sa].samplename == n) {
                        s = sa;
                        break;
                    } else {
                        s = 0;
                    }
                }
                return s;
            }

            //// Do nothing with other keys
            if (keyToPitch[e.key] == null) {
            } else {

            var index;
            switch (x) {

                // 1 - 0
                case 49:
                index = theIndex('ONE');
                break;
                case 50:
                index = theIndex('TWO');
                break;
                case 51:
                index = theIndex('THREE');
                break;
                case 52:
                index = theIndex('FOUR');
                break;
                case 53:
                index = theIndex('FIVE');
                break;
                case 54:
                index = theIndex('SIX');
                break;
                case 55:
                index = theIndex('SEVEN');
                break;
                case 56:
                index = theIndex('EIGHT');
                break;
                case 57:
                index = theIndex('NINE');
                break;
                case 48:
                index = theIndex('ZERO');
                break;

                // Q - P
                case 81:
                index = theIndex('Q');
                break;
                case 87:
                index = theIndex('W');
                break;
                case 69:
                index = theIndex('E');
                break;
                case 82:
                index = theIndex('R');
                break;
                case 84:
                index = theIndex('T');
                break;
                case 89:
                index = theIndex('Y');
                break;
                case 85:
                index = theIndex('U');
                break;
                case 73:
                index = theIndex('I');
                break;
                case 79:
                index = theIndex('O');
                break;
                case 80:
                index = theIndex('P');
                break;

                // A - L
                case 65:
                index = theIndex('A');
                break;
                case 83:
                index = theIndex('S');
                break;
                case 68:
                index = theIndex('D');
                break;
                case 70:
                index = theIndex('F');
                break;
                case 71:
                index = theIndex('G');
                break;
                case 72:
                index = theIndex('H');
                break;
                case 74:
                index = theIndex('J');
                break;
                case 75:
                index = theIndex('K');
                break;
                case 76:
                index = theIndex('L');
                break;

                // Z - M
                case 90:
                index = theIndex('Z');
                break;
                case 88:
                index = theIndex('X');
                break;
                case 67:
                index = theIndex('C');
                break;
                case 86:
                index = theIndex('V');
                break;
                case 66:
                index = theIndex('B');
                break;
                case 78:
                index = theIndex('N');
                break;
                case 77:
                index = theIndex('M');
                break;

                // SPACE
                case 32:
                index = theIndex('SPACE');
                break;
            }
            samplers[index].triggerAttackRelease(keyToPitch[e.key]);
            }
        }

        $(document).keydown(function(e) {
            if( disableKeys ) {
            } else {
                onkeydown(e);
            }
        });

        var colorList = [];
        var colPalette = thepedal.color;
        var colData;
        for( let c = 0; c < theAnima[0].colors.length; c++ ) {
            if (theAnima[0].colors[c].colkey == colPalette) {
                colData = theAnima[0].colors[c].value;
                break;
            }
        }

        // var colData = theAnima[0][colPalette];
        function getRandomInt(min, max) {
            min = Math.ceil(min);
            max = Math.floor(max);
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }
        for (var c = 0; c < thesamples.length; c++) {
            var randCol1 = getRandomInt(colData[0], colData[3]);
            var randCol2 = getRandomInt(colData[1], colData[4]);
            var randCol3 = getRandomInt(colData[2], colData[5]);
            var col = 'rgb(' + randCol1 + ',' + randCol2 + ',' + randCol3 + ')';
            colorList.push(col);
        }
        console.log(colorList);

        for (var c = 0; c < thesamples.length; c++) {
            var keyClass = '.active.col-' + thesamples[c].samplename;
            var sampleClass = '.sample.col-' + c + ' > div';
            $(keyClass).css('background-color', colorList[c] );
            $(sampleClass).css('background-color', colorList[c] );

            var playSampleBtn = '#play-sample-' + c ;
            (function(c) {
            var thepitch = thesamples[c].pitch.toUpperCase().replace('M', '#');
            var sampleaudio = samplers[c];
            $(playSampleBtn).on('click', () => {
                if(!toneStarted) {
                        Tone.start();
                        toneStarted = true;
                    }
            // console.log(c, thepitch);
            sampleaudio.triggerAttackRelease(thepitch);
            });
        })(c);   
        }

    });
</script>