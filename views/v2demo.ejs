<html lang="en">
    <%- include('./partials/frontHead.ejs')  %> 
<body>
    <%- include('./partials/frontNav.ejs')  %> 

    <div class="infoPanel">
        <div class="flex">
            <div class="pedalImg">
                <img src="v1/images/pedalsOnly/rainbowmachine@2x.png" alt="pedal">
            </div>
            <div class="infoOne">
                <p class="label">ONOMATOPOEIA</p>
                <h2>PYON PYON</h2>
                <p>Describes someone who is happy and excited. In a buoyant mood.</p>
                <p class="label">PEDAL</p>
                <h2>Rainbow Machine</h2>
                <p>Polyphonic Pitch Mesmerizer</p>
            </div>
            <div class="infoTwo">
                <p class="label">MUSIC BY</p>
                <h2>Artist Name Artist Name</h2>
                <h3>"Track Title Here"</h3>
                <p class="label">VISUAL ART</p>
                <h2>Artist Name</h2>
            </div>
            <div class="infoThree">
                <p class="label">Keys</p>
                <img class="keyboard" src="v2/images/keysOnBoard.svg" alt="keyboard">
            </div>
            <div class="merch-icon">
                <div class="one-icon">
                    <img src="v2/images/T-shirt-temp.png" alt="t-shirt">
                </div>
                <div class="one-icon">
                    <img src="v2/images/jogger-temp.png" alt="t-shirt">
                </div>
            </div>
        </div>
        <div class="playBtnPanel" onclick="controlHandler()">PLAY</div>
        <!-- <button class="lineBtnWh">PLAY</button> -->
    </div>
    <!-- <div class="smPedalImg">
        <img src="v1/images/pedalsOnly/rainbowmachine@2x.png" alt="pedal">
    </div> -->


    <div id="controller">
      <div id="controlMain" class="paused" onclick="controlHandler()"></div>
      <div id="controlStems">
        <div class="stem muted" id="stem0">1</div>
        <div class="stem muted" id="stem1">2</div>
        <div class="stem muted" id="stem2">3</div>
      </div>
    </div>
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js"></script>
    <script src="v2/opV2-sound.js"></script>
    <!-- <script src="v2/opV2-visual.js"></script> -->
    <script>
        var thepedal = <%- JSON.stringify(pedal) %> ;
        var onomato = thepedal[0].onomato.toUpperCase().replace(/\s+/g, '');
        var disableKeys = false;
        var globalR = 90, globalG = 80, globalB = 80;
        var colNum = 2;
        var rSw = true, gSw = true, bSw = true;
        
        class Particle {
          constructor(r, g, b){
            this.x = random(0, width);
            this.y = random(0, height);
            this.r = r;
            this.g = g;
            this.b = b;
            this.d = 2;
            this.xSpeed = random(-2.5,2);
            this.ySpeed = random(-2,2.5);
          }
          createParticle() {
            noStroke();
            noFill();
            circle(this.x,this.y,this.d);
          }
          moveParticle() {
            if(this.x < 0 || this.x > width)
              this.xSpeed*=-1;
            if(this.y < 0 || this.y > height)
              this.ySpeed*=-1;
            this.x+=this.xSpeed;
            this.y+=this.ySpeed;
          }
          joinParticles(particles) {
            particles.forEach(element =>{
              let dis = dist(this.x,this.y,element.x,element.y);
              if(dis<150) {
                strokeWeight(1);
                stroke('rgb(' + globalR + ',' + globalG + ',' + globalB + ')');
                line(this.x,this.y,element.x,element.y);
              }
            });
          }
        }
        class WideBar {
          constructor(y,r,b,g) {
            this.x = 0;
            this.y = y;
            this.w = width;
            this.h = height/4;
            this.r = r;
            this.g = g;
            this.b = b;
            this.speed = 100;
          }
          createWideBar() {
            noStroke();
            fill(this.r, this.g, this.b);
            rect(this.x, this.y, this.w, this.h);
          }
          goDown(arrayName) {
            this.y+=this.speed;
            if(this.y > height) arrayName.splice(0, 1);
          }
          goUp(arrayName) {
            this.y-=this.speed;
            if(this.y < 0) arrayName.splice(0, 1);
          }
        }
        
        class OnoLetter {
          constructor(r, g, b) {
            this.x = random(0, width);
            this.y = random(0, height);
            this.r = r;
            this.g = g;
            this.b = b;
            this.ol = onomato[floor(random(0, onomato.length -1))];
            this.size = random(400, 800);
          }
          createOnoLetter() {
            noStroke();
            fill(this.r, this.g, this.b);
            textSize(this.size);
            textAlign(CENTER);
            text(this.ol, this.x, this.y);
          }
          deleteOnoLetter(arrayName) {
            arrayName.splice(0, 1);
          }
        }
        
        class LineCircle {
          constructor(r, g, b, fill) {
            this.x = random(0, width);
            this.y = random(0, height);
            this.d = random(400, 600);
            this.r = r;
            this.g = g;
            this.b = b;
            this.fill = fill;
            this.speed = 50;
            this.stroke = random(4,10);
          }
          createCircle() {
            stroke(this.r, this.g, this.b);
            strokeWeight(this.stroke);
            if(this.fill) {fill(this.r, this.g, this.b);}
            else {noFill();}
            ellipseMode(CENTER);
            circle(this.x, this.y, this.d);
          }
          shrinkCircle(arrayName) {
            this.d -= this.speed;
            if(this.d < 0) arrayName.splice(0, 1);
          }
        }
        
        // class Line {
        //   constructor(r, g, b, vertical) {
        //     this.x = random(0, width);
        //     this.y = random(0, height);
        //     this.r = r;
        //     this.g = g;
        //     this.b = b;
        //     this.vertical = vertical;
        //     this.speed = 100;
        //     // this.stroke = random(10,30);
        //     this.thick = random(100, 300);
        //   }
        //   createLine() {
        //     stroke(this.r, this.g, this.b);
        //     strokeWeight(this.stroke);
        //     noFill();
        //     // if (this.vertical) { line(this.x, 0, this.x, height); }
        //     // else { line(0, this.y, width, this.y); }
        //     if (this.vertical) { rect(this.x, 0, this.x + this.thick, height); }
        //     else { line(0, this.y, width, this.y + this.thick); }
        //   }
        //   moveLine(arrayName) {
        //     if (this.vertical) { 
        //       this.x += this.speed; 
        //       if(this.x > width) arrayName.splice(0, 1);
        //     }
        //     else { 
        //       this.y += this.speed;
        //       if(this.y > height) arrayName.splice(0, 1);
        //     }
        //   }
        // }
        
        let particles = [];
        let wideBars = [];
        let onoLetters = [];
        let lineCircles = [];
        // let lines = [];
        
        function setup() {
          createCanvas(windowWidth, windowHeight);
          background('rgb(10,10,10)');
          frameRate(24);
          for(let i = 0;i<width/20;i++){
            particles.push(new Particle(random(0,width),random(0,height), globalR, globalG, globalB));
          }
        }
        
        function draw() {
          // background('rgba(15,15,15,0.01)');
          background('rgba(10,10,10,0.007)');
          for(let i = 0;i<particles.length;i++) {
            particles[i].createParticle();
            particles[i].moveParticle();
            particles[i].joinParticles(particles.slice(i));
          }
          for(let i = 0;i<wideBars.length;i++) {
            wideBars[i].createWideBar();
            wideBars[i].goDown(wideBars);
          }
          for(let i = 0;i<onoLetters.length;i++) {
            onoLetters[i].createOnoLetter();
            onoLetters[i].deleteOnoLetter(onoLetters);
          }
          for(let i = 0;i<lineCircles.length;i++) {
            lineCircles[i].createCircle();
            lineCircles[i].shrinkCircle(lineCircles);
          }
          // for(let i = 0;i<lines.length;i++) {
          //   lines[i].createLine();
          //   lines[i].moveLine(lines);
          // }
          if (globalR >= 200) {rSw = false;}
          if (globalR <= 10) {rSw = true;}
          if (globalG >= 200) {gSw = false;}
          if (globalG <= 10) {gSw = true;}
          if (globalB >= 200) {bSw = false;}
          if (globalB <= 10) {bSw = true;}
        
            if (rSw){globalR = globalR + colNum;
            } else {globalR = globalR - colNum;}
            if (gSw){globalG = globalG + colNum;
            } else {globalG = globalG - colNum;}
            if (bSw){globalB = globalB + colNum;
            } else {globalB = globalB - colNum;}
        }
        
        function keyPressed() {
          if (key == 'a' || key == 'b') {
            globalR = globalR + 10;
            for(var i=0;i<10;i++) {
              particles.push(new Particle(globalR, globalG, globalB));
            }
          }
          if (key == 'd' || key == 'l') {
            globalG = globalG + 10;
            for(var i=0;i<10;i++) {
              particles.push(new Particle(globalR, globalG, globalB));
            }
          }
          if (key == 'g' || key == 'i') {
            globalB = globalB + 10;
            for(var i=0;i<10;i++) {
              particles.push(new Particle(globalR, globalG, globalB));
            }  }
          if (key == 'j' || key == 'q') {
            globalR = 20; globalG = 10; globalB = 10;   
            for(var i=0;i<10;i++) {
              particles.push(new Particle(globalR, globalG, globalB));
            }  }
          if (key == 'm' || key == 'e') {
            globalR = 190; globalG = 180; globalB = 180;
            for(var i=0;i<10;i++) {
              particles.push(new Particle(globalR, globalG, globalB));
            }
          }
          if (key == 'p' || key == 'r' || key == 'z') {
            var r = 10, g = 10, b = 10;
            onoLetters.push(new OnoLetter(r, g, b));
          }
          if (key == 's' || key == 'u' || key == 't') {
            var r = globalR, g = globalG, b = globalB;
            onoLetters.push(new OnoLetter(r, g, b));
          }
          if (key == 'v' || key == 'w' || key == 'k') {
            var r = 10, g = 10, b = 10;
            lineCircles.push(new LineCircle(r, g, b, false));
          }
          if (key == 'x' || key == 'y' || key == 'n') {
            var r = 10, g = 10, b = 10;
            lineCircles.push(new LineCircle(r, g, b, true));
          }
          if (key == 'c' || key == 'h') {
            var r = globalR, g = globalG, b = globalB;
            lineCircles.push(new LineCircle(r, g, b, true));
            // lines.push(new Line(r, g, b, false))
          }
          if (key == 'f' || key == 'o') {
            var r = globalR, g = globalG, b = globalB;
            lineCircles.push(new LineCircle(r, g, b, false));
            // lines.push(new Line(r, g, b, true))
          }
          if (keyCode === 32) {
            wideBars.push(new WideBar(0,10,10,10));
          }
        
          if(particles.length > 80) {
            var extraParticles = particles.length + 1 - 80;
            particles.splice(0, extraParticles);
          }
        }
        
          </script>
</body>
</html>